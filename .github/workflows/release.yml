name: Release
on: [push]

env:
  CI: true

jobs:
  lint:
    name: Lint codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - uses: pnpm/action-setup@v2.2.2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: true

      - name: Lint
        run: pnpm lint

  build:
    name: Build, and test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        node: ["16.x", "18.x", "20.x"]
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: true

      - name: Test
        run: pnpm run test --ci --coverage --maxWorkers=2

      - name: Build
        run: pnpm build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - uses: pnpm/action-setup@v2.2.2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Create and publish versions
        uses: changesets/action@v1
        with:
          title: "Release new version"
          commit: "update version"
          publish: pnpm publish:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
